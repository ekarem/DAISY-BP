Third Year Project in Computer Science at Bath, UK. (2011-12)

The project title is "Fast cross-device dense pixel correspondence using DAISY descriptors and OpenCL"

It is aiming 

1) to use OpenCL on graphics cards to implement the computation of the 
DAISY descriptor (cvlab.epfl.ch/alumni/tola/daisy.html) for an image in 
a dense fashion, ie compute a descriptor for every pixel in the image, 
or a large subset.

2) use Belief Propagation (on GPU again with OpenCL) to 
(after DAISY descriptor images have been computed for two images) to 
search for the pixel correspondence between two images. This is also 
aimed to be done densely, ie for as many descriptors as are available 
in the descriptor images

The implementation of this application in OpenCL should broaden the 
usability/applicability of such an algorithm to a range of different 
hardware/software without specific system versions or requirements.
This relies on the, currently strong, support of major OS/hardware 
developers towards OpenCL.

Progress:
07/02/12 - Implemented DAISY up until all the smoothing/gradient kernels, 
           the data on the GPU now needs to be transposed.... in a 4D type 
           of transposition (AxBxCxD to CxDxAxB) ... fun! After this DAISY 
           will be done and optimisations will need to be made, before 
           proceeding to BP.
03/03/12 - DAISY has been implemented in full and individual operations 
           have been optimised (definitely the convolutions and first
           transposition of gradients), the second transposition to desriptors
           is complex but it has a structure to ensure coalesced reads/writes,
           optimising it would be both time-consuming and also not very beneficial
           given that the bottleneck of the whole computation is in the data
           transfer back from the GPU. Whereas the descriptors cannot be kept
           on GPU anyway because it's way too much data.
           -->(idea to be explored next) downsampling to reduce the data
           Speed measurements have been done, they will also be done properly
           for the CPU version to have a robust comparison. The speedup however
           has proven pretty good already and the functionality has also been
           largely verified.
28/03/12 - Functionality is verified. Speed has been benchmarked against
           the CPU version and dense SIFT as well. It is much faster than both.
           The downsampling idea, which is to build Gaussian pyramid of the smoothed
           layers, is being looked at now. It has been implemented so that dense
           descriptors can be output originating from a Gaussian pyramid, but the
           final operation on the GPU has not been optimised for this. For post-DAISY
           computation processing on the GPU an application would not want to do
           the final transposition as the redundancy of the data volume would make it too
           inefficient. So while the pre-final transpose operations are much faster
           still, the quality of the output itself is being examined. The downsampling
           does show less accuracy but how much is still to be determined. Any application
           however that continues processing on GPU with the pre-DAISY data will be offered
           huge remaining time per second even with a resolution of 1024x768 ~100(!) frames/second
           can be achieved to get pre-DAISY data (SxHxWxG).
